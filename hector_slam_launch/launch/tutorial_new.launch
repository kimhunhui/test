<?xml version="1.0"?>

<launch>

  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>

  <!--<param name="/use_sim_time" value="true"/> -->
  <param name="/use_sim_time" value="false"/>


  <node pkg="rviz" type="rviz" name="rviz"
    args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/>

  <include file="$(find hector_mapping)/launch/mapping_1.launch"/>
  <include file="$(find hector_imu_attitude_to_tf)/launch/example.launch"/>
  <include file="$(find hector_slam_launch)/launch/map_server.launch"/>
  <include file="$(find hector_slam_launch)/launch/amcl_only.launch"/>
  <include file="$(find hector_geotiff_launch)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>
<node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 map odom 100"/>
  <!-- move_base -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
      <param name="controller_frequency" value="10.0" />
      <rosparam file="$(find hector_slam_launch)/config/costmap_common_params.yaml" command="load" ns="global_costmap"/>
      <rosparam file="$(find hector_slam_launch)/config/costmap_common_params.yaml" command="load" ns="local_costmap"/>
      <rosparam file="$(find hector_slam_launch)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find hector_slam_launch)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find hector_slam_launch)/config/trajectory_planner.yaml" command="load" />
      <rosparam file="$(find hector_slam_launch)/config/move_base_params.yaml" command="load" />
      <remap from="cmd_vel" to="/cmd_vel"/>
      <remap from="odom" to="/odom"/>
      <remap from="scan" to="/scan"/>
      <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
      <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>
  </node>
  <node pkg="hector_slam_launch" type="go_to_point.py" name="go_to_point" />
  <node pkg="hector_slam_launch" type="ros_odometry_publisher_example.py" name="odometry_publisher" />

  

</launch>
